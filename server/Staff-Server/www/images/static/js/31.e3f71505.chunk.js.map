{"version":3,"sources":["pages/Staff/ChangePassword/changepassword.jsx"],"names":["ModicPsd","Staff","Changepassword","handleFinish","value","a","result","code","message","props","history","push","pathname","state","userId","Store","getState","dispatch","userClear","msg","handleRefs","passwordForm","submit","className","ref","size","labelCol","span","wrapperCol","name","onFinish","this","Item","label","hasFeedback","rules","required","Password","pattern","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","type","onClick","Component"],"mappings":"oTAOOA,EAAUC,IAAVD,SACcE,E,4MACjBC,a,uCAAa,WAAMC,GAAN,eAAAC,EAAA,sEACUL,EAASI,GADnB,OAEQ,SADXE,EADG,QAECC,MACNC,YAAQ,0DAAa,WACrB,EAAKC,MAAMC,QAAQC,KAAK,CACpBC,SAAS,IACTC,MAAM,CAACC,OAAOC,IAAMC,WAAWF,UAEnCC,IAAME,SAASC,gBAEfV,YAAQF,EAAOa,KAVV,2C,wDAabC,WAAW,WACP,EAAKC,aAAaC,U,4CAEtB,WAAU,IAAD,OACL,OACI,0BAASC,UAAU,mBAAnB,UACG,yBAASA,UAAU,gBAAnB,sCAGA,0BAASA,UAAU,gBAAnB,UACK,eAAC,IAAD,CACIC,IAAK,SAAAH,GAAY,OAAE,EAAKA,aAAaA,GACrCI,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,GACpBE,KAAK,eACLC,SAAUC,KAAK5B,aANnB,UAQI,cAAC,IAAK6B,KAAN,CACIH,KAAK,SACLI,MAAM,sBACNC,aAAW,EAEXC,MAAO,CAAC,CACJC,UAAS,EACT5B,QAAQ,+CAPhB,SASI,cAAC,IAAM6B,SAAP,MAEJ,cAAC,IAAKL,KAAN,CACIH,KAAK,SACLI,MAAM,qBACNC,aAAW,EACXC,MAAO,CAAC,CACJC,UAAS,EACT5B,QAAQ,8CACV,CACE8B,QAAQ,qBACR9B,QAAQ,+JAThB,SAaQ,cAAC,IAAM6B,SAAP,MAER,cAAC,IAAKL,KAAN,CACIH,KAAK,aACLI,MAAM,2BACNM,aAAc,CAAC,UACfL,aAAW,EACXC,MAAO,CAAC,CACJC,UAAS,EACT5B,QAAQ,gEACV,gBAAGgC,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGtC,GACX,OAAKA,GAASoC,EAAc,YAAcpC,EAInCuC,QAAQC,OAAO,IAAIC,MAAM,2DAHvBF,QAAQG,cAX3B,SAmBQ,cAAC,IAAMT,SAAP,SAGZ,yBAASd,UAAU,iBAAnB,SACI,cAAC,IAAD,CAAQE,KAAK,QAAQsB,KAAK,UAAUxB,UAAU,WAAWyB,QAASjB,KAAKX,WAAvE,sC,GAjFoB6B","file":"static/js/31.e3f71505.chunk.js","sourcesContent":["import React, { Component} from 'react'\r\nimport \"./changepassword.scss\";\r\nimport {Form,Input,Button} from \"antd\";\r\nimport {Staff} from \"../../../axios\";\r\nimport {message} from \"../../../api\";\r\nimport Store from '../../../redux/store';\r\nimport {userClear} from \"../../../redux/action/user\";\r\nconst {ModicPsd}=Staff\r\nexport default class Changepassword extends Component {\r\n    handleFinish=async value=>{\r\n        const result=await ModicPsd(value);\r\n        if(result.code===\"200\"){\r\n            message(\"修改成功,请重新登录\",\"success\");\r\n            this.props.history.push({\r\n                pathname:'/',\r\n                state:{userId:Store.getState().userId}\r\n            })\r\n            Store.dispatch(userClear());\r\n        }else{\r\n            message(result.msg);\r\n        }\r\n    }\r\n    handleRefs=()=>{\r\n        this.passwordForm.submit();\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"change-container\">\r\n               <section className=\"change-header\">\r\n                   修改密码\r\n               </section>\r\n               <section className=\"change-mainer\">\r\n                    <Form\r\n                        ref={passwordForm=>this.passwordForm=passwordForm}\r\n                        size=\"large\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 8}}\r\n                        name=\"passwordForm\"\r\n                        onFinish={this.handleFinish}\r\n                        >\r\n                        <Form.Item\r\n                            name=\"oldPsd\"\r\n                            label=\"旧密码:\"\r\n                            hasFeedback\r\n\r\n                            rules={[{\r\n                                required:true,\r\n                                message:'旧密码不能为空'\r\n                            }]}>\r\n                            <Input.Password/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"newPsd\"\r\n                            label=\"新密码\"\r\n                            hasFeedback\r\n                            rules={[{\r\n                                required:true,\r\n                                message:'新密码不能为空'\r\n                            },{\r\n                                pattern:/^[a-zA-Z]\\w{5,11}$/,\r\n                                message:'以字母开头，长度在6~12之间，只能包含字母、数字和下划线'\r\n                            }\r\n                            ]}\r\n                            >\r\n                                <Input.Password/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"comfirmPsd\"\r\n                            label=\"确认密码\"\r\n                            dependencies={['newPsd']}\r\n                            hasFeedback\r\n                            rules={[{\r\n                                required:true,\r\n                                message:'确认密码密码不能为空'\r\n                            },({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                  if (!value || getFieldValue('newPsd') === value) {\r\n                                    return Promise.resolve();\r\n                                  }\r\n                    \r\n                                  return Promise.reject(new Error('两次输入密码不一致'));\r\n                                },\r\n                              }),\r\n                            ]\r\n                            }>\r\n                                <Input.Password/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <section className=\"refs-container\">\r\n                        <Button size=\"large\" type=\"primary\" className=\"refs-btn\" onClick={this.handleRefs}>提交</Button>\r\n                    </section>\r\n               </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}