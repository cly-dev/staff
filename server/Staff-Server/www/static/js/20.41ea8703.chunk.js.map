{"version":3,"sources":["components/Header/header.jsx","pages/Staff/Category/category.jsx"],"names":["header","props","className","title","children","Category","handleCreate","val","index","state","isInput","message","listData","data","push","ref","input","size","type","onClick","handleRef","handleRefCancel","setState","pop","handleChange","e","target","checked","checkedData","value","filter","item","handleDelete","console","log","i","valuePropName","onChange","length","style","position","right","handleComfirmDet","handleDetCancel","includes","key","this","map","extra","width","onDoubleClick","Component"],"mappings":"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","file":"static/js/20.41ea8703.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./header.scss\";\r\nfunction header(props) {\r\n  return (\r\n    <section className=\"staff-header\">\r\n      {props.title}\r\n\r\n      {props.children}\r\n    </section>\r\n  );\r\n}\r\n\r\nheader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default header;\r\n","import React, { Component } from \"react\";\r\nimport \"./category.scss\";\r\nimport Header from \"../../../components/Header/header\";\r\nimport { Card, Space, Tooltip, Input, Button, Checkbox } from \"antd\";\r\nimport { DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport message from \"../../../api/message\";\r\nexport default class Category extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      //列表数据\r\n      listData: [\r\n        {\r\n          title: \"日用品\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"1\",\r\n        },\r\n        {\r\n          title: \"日用品2\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n        {\r\n          title: \"日用品3\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n        {\r\n          title: \"日用品4\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n        {\r\n          title: \"日用品5\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n        {\r\n          title: \"日用品6\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n        {\r\n          title: \"日用品7\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n        {\r\n          title: \"日用品8\",\r\n          data: [\"1\", \"2\"],\r\n          key: \"2\",\r\n        },\r\n      ],\r\n      //未保存标识\r\n      isInput: false,\r\n    };\r\n    //保存原始数据\r\n    this.data = [];\r\n    //保存选择的数据\r\n    this.checkedData = [];\r\n    //删除条目的下标\r\n    this.index = 0;\r\n  }\r\n  //添加子类\r\n  handleCreate = (val, index) => {\r\n    if (!this.state.isInput) {\r\n      const { listData } = this.state;\r\n      listData[index].data.push(\r\n        <Space>\r\n          <Input ref={(input) => (this.input = input)}></Input>{\" \"}\r\n          <Button\r\n            size=\"middle\"\r\n            type=\"primary\"\r\n            onClick={() => this.handleRef(val, index)}\r\n          >\r\n            保存\r\n          </Button>\r\n          <Button\r\n            size=\"middle\"\r\n            onClick={() => this.handleRefCancel(val, index)}\r\n          >\r\n            取消\r\n          </Button>\r\n        </Space>\r\n      );\r\n      this.setState({\r\n        listData,\r\n        isInput: true,\r\n      });\r\n    } else {\r\n      message(\"请先保存\");\r\n    }\r\n  };\r\n  //取消添加子类\r\n  handleRefCancel = (val, index) => {\r\n    const { listData } = this.state;\r\n    val.data.pop();\r\n    listData[index] = val;\r\n    this.setState({\r\n      listData,\r\n      isInput: false,\r\n    });\r\n  };\r\n  //选择子项事件\r\n  handleChange = (e, val, index) => {\r\n    this.index = index;\r\n    if (e.target.checked) {\r\n      this.checkedData.push(e.target.value);\r\n    } else {\r\n      this.checkedData = this.checkedData.filter(\r\n        (item) => item !== e.target.value\r\n      );\r\n    }\r\n  };\r\n  //删除子类\r\n  handleDelete = (val, index) => {\r\n    console.log(val);\r\n    if (!this.state.isInput) {\r\n      this.data = [...val.data];\r\n      const { listData } = this.state;\r\n      for (let i = 0; i < val.data.length; i++) {\r\n        val.data[i] = (\r\n          <Space>\r\n            <Checkbox\r\n              valuePropName=\"checked\"\r\n              value={val.data[i]}\r\n              onChange={(e) => this.handleChange(e, this.data[i], index)}\r\n            ></Checkbox>\r\n            {val.data[i]}\r\n          </Space>\r\n        );\r\n      }\r\n      val.data.push(\r\n        <section style={{ position: \"relative\" }}>\r\n          <Space style={{ position: \"absolute\", right: 0 }}>\r\n            <Button size=\"small\" type=\"danger\" onClick={this.handleComfirmDet}>\r\n              删除\r\n            </Button>\r\n            <Button size=\"small\" onClick={() => this.handleDetCancel(index)}>\r\n              取消\r\n            </Button>\r\n          </Space>\r\n        </section>\r\n      );\r\n      listData[index] = val;\r\n      this.setState({\r\n        listData,\r\n        isInput: true,\r\n      });\r\n    } else {\r\n      message(\"请先保存\");\r\n    }\r\n  };\r\n  //取消删除\r\n  handleDetCancel = (index) => {\r\n    const { listData } = this.state;\r\n    listData[index].data = this.data;\r\n    this.setState({\r\n      listData,\r\n      isInput: false,\r\n    });\r\n  };\r\n  //确认删除\r\n  handleComfirmDet = () => {\r\n    const { listData } = this.state;\r\n    if (this.checkedData.length) {\r\n      this.data = this.data.filter((item) => {\r\n        return !this.checkedData.includes(item);\r\n      });\r\n      listData[this.index].data = this.data;\r\n      this.setState({\r\n        listData,\r\n        isInput: false,\r\n      });\r\n    } else {\r\n      message(\"请选择删除的类别\");\r\n    }\r\n  };\r\n  //确定添加\r\n  handleRef = (val, index) => {\r\n    if (this.input.state.value) {\r\n      const { listData } = this.state;\r\n      if (listData[index].data.includes(this.input.state.value)) {\r\n        message(\"该类别已存在\");\r\n        return;\r\n      }\r\n      val.data.pop();\r\n      val.data.push(this.input.state.value);\r\n      listData[index] = val;\r\n      this.setState({\r\n        listData,\r\n        isInput: false,\r\n      });\r\n      return;\r\n    }\r\n    message(\"内容不能为空\");\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* 管理类别 */}\r\n        <section className=\"staff-category\">\r\n          {/* 头部 */}\r\n          <Header title=\"管理类别\"></Header>\r\n          <section className=\"catrgory-main\">\r\n            {this.state.listData.map((val, index) => {\r\n              return (\r\n                <Card\r\n                  className=\"main-card\"\r\n                  title={val.title}\r\n                  key={val.title}\r\n                  extra={\r\n                    <Space>\r\n                      <Tooltip title=\"添加子类\">\r\n                        <PlusOutlined\r\n                          onClick={() => this.handleCreate(val, index)}\r\n                        />\r\n                      </Tooltip>\r\n                      <Tooltip title=\"删除子类\">\r\n                        <DeleteOutlined\r\n                          onClick={() => this.handleDelete(val, index)}\r\n                        />\r\n                      </Tooltip>\r\n                    </Space>\r\n                  }\r\n                  style={{ width: 300 }}\r\n                >\r\n                  {val.data.map((item, key) => {\r\n                    return (\r\n                      <section\r\n                        onDoubleClick={() => this.handleDelete(val, key)}\r\n                        className=\"card-item\"\r\n                        key={key}\r\n                      >\r\n                        {item}\r\n                      </section>\r\n                    );\r\n                  })}\r\n                </Card>\r\n              );\r\n            })}\r\n          </section>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}