{"version":3,"sources":["pages/Staff/OldNotice/OldNotice.jsx"],"names":["getNotice","Staff","readNotice","topNotice","OldNotice","props","handleTop","val","a","listData","state","_id","result","console","log","code","message","window","location","reload","msg","handleRead","index","status","setState","handleGetNotice","pageNum","length","data","forEach","value","Array","isArray","resource","push","admin","notice","total","pageSize","this","className","locale","emptyText","itemLayout","size","pagination","onChange","page","dataSource","renderItem","item","Item","Meta","avatar","src","imgPath","title","description","name","position","style","color","createTime","content","float","disabled","onClick","type","React","Component"],"mappings":"4VAMOA,EAAgCC,IAAhCD,UAAUE,EAAsBD,IAAtBC,WAAWC,EAAWF,IAAXE,UACPC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,UARkB,uCAQR,WAAMC,GAAN,iBAAAC,EAAA,6DACEC,EAAU,EAAKC,MAAfD,SADF,SAEaN,EAAUM,EAASF,GAAKI,KAFrC,OAEAC,EAFA,OAGNC,QAAQC,IAAIL,EAASF,GAAKI,KACT,QAAdC,EAAOG,MACNC,YAAQ,4BAERC,OAAOC,SAASC,UAEhBH,YAAQJ,EAAOQ,KATb,2CARQ,wDAqBlBC,WArBkB,uCAqBP,WAAOd,EAAIe,GAAX,iBAAAd,EAAA,6DACAC,EAAU,EAAKC,MAAfD,SACPI,QAAQC,IAAIP,GAFL,SAGYL,EAAWK,EAAII,KAH3B,OAGDC,EAHC,OAIPC,QAAQC,IAAIF,GACK,QAAdA,EAAOG,MACNN,EAASa,GAAOC,OAAO,IACvBP,YAAQ,2BAAO,WACf,EAAKQ,SAAS,CACVf,cAGJO,YAAQJ,EAAOQ,KAZZ,2CArBO,0DAqClBK,gBArCkB,uCAqCF,WAAMC,GAAN,iBAAAlB,EAAA,6DACLC,EAAU,EAAKC,MAAfD,UACEkB,OAAO,EAFJ,SAGO3B,EAAU0B,GAHjB,OAGNd,EAHM,OAIZC,QAAQC,IAAIF,GACTA,EAAOgB,OACNhB,EAAOgB,KAAKC,SAAQ,SAAAC,GACbC,MAAMC,QAAQF,EAAMG,YACvBH,EAAMG,SAASH,EAAMG,SAAS,IAE9BxB,EAASyB,KAAT,uCAAkBJ,GAASA,EAAMK,OAASL,EAAMM,YAEpD,EAAKZ,SAAS,CACVf,WACA4B,MAAMzB,EAAO0B,YAdT,2CArCE,sDAEd,EAAK5B,MAAM,CACPD,SAAS,GACT4B,MAAM,GAJI,E,qDAuDlB,WACIE,KAAKd,gBAAgB,K,oBAEzB,WAAS,IAAD,OACR,OACI,yBAASe,UAAU,sBAAnB,SAEI,0BAASA,UAAU,mBAAnB,UACI,cAAC,IAAD,CACIC,OAAQ,CAACC,UAAU,4BACXC,WAAW,aACXC,KAAK,QACLC,WAAY,CACZR,MAAME,KAAK7B,MAAM2B,MACjBS,SAAS,SAAAC,GACL,EAAKtB,gBAAgBsB,IAEzBT,SAAU,GAElBU,WAAYT,KAAK7B,MAAMD,SACvBwC,WAAY,SAACC,EAAK5B,GAAN,OACR,eAAC,IAAK6B,KAAN,WAGA,cAAC,IAAKA,KAAKC,KAAX,CACIC,OAAQ,cAAC,IAAD,CAAQC,IAAKJ,EAAKK,UAC1BC,MAAON,EAAKM,MACZC,YAAa,eAAC,IAAD,WAAQP,EAAKQ,KAAMR,EAAKS,SAAS,sBAAMC,MAAO,CAACC,MAAM,SAApB,SAA+BX,EAAKY,kBAEpFZ,EAAKa,QACP,yBAASvB,UAAU,gBAAnB,SACI,eAAC,IAAD,CAAOoB,MAAO,CAACI,MAAM,SAArB,UACI,eAAC,IAAD,CAAQC,SAAwB,IAAdf,EAAK3B,OAAY2C,QAAS,kBAAI,EAAK5D,UAAUgB,IAA/D,UAAsF,IAAd4B,EAAK3B,OAAW,SAAI,GAA5F,kBACA,eAAC,IAAD,CAAQ4C,KAAK,UAAUF,SAAUf,EAAK3B,OAAO,EAAG2C,QAAS,kBAAI,EAAK7C,WAAW6B,EAAK5B,IAAlF,UAAyG,IAAd4B,EAAK3B,OAAW,SAAI,SAA/G,mBAXC2B,EAAKvC,QAf1B,a,GA/D2ByD,IAAMC","file":"static/js/15.9d918749.chunk.js","sourcesContent":["import React from 'react'\r\nimport { List, Avatar, Button,Space} from 'antd';\r\nimport {Staff} from \"../../../axios\";\r\nimport {message} from \"../../../api\";\r\nimport \"../NewNotice/NewNotice.scss\";\r\nimport \"./OldNotice.scss\";\r\nconst {getNotice,readNotice,topNotice}=Staff;\r\nexport default class OldNotice extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            listData:[],\r\n            total:0,\r\n        }\r\n    }\r\n    //置顶\r\n    handleTop=async val=>{\r\n        const { listData}=this.state;\r\n        const result=await topNotice(listData[val]._id);\r\n        console.log(listData[val]._id);\r\n        if(result.code==='200'){\r\n            message('置顶成功',);\r\n          \r\n            window.location.reload();\r\n        }else{\r\n            message(result.msg);\r\n        }\r\n    }\r\n    //点击读取\r\n    handleRead=async (val,index)=>{\r\n        const {listData}=this.state;\r\n        console.log(val);\r\n        const result=await readNotice(val._id);\r\n        console.log(result);\r\n        if(result.code==='200'){\r\n            listData[index].status='1';\r\n            message(\"读取成功\",'success');\r\n            this.setState({\r\n                listData\r\n            })\r\n        }else{\r\n            message(result.msg);\r\n        }\r\n    }\r\n    //获取通知\r\n    handleGetNotice=async(pageNum)=>{\r\n        const {listData}=this.state;\r\n        listData.length=0;\r\n        const result=await getNotice(pageNum);\r\n        console.log(result);\r\n        if(result.data){\r\n            result.data.forEach(value=>{\r\n                if(Array.isArray(value.resource)){\r\n                value.resource=value.resource[0]   \r\n                }\r\n                listData.push({...value,...value.admin,...value.notice});\r\n            })  \r\n            this.setState({\r\n                listData,\r\n                total:result.pageSize\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.handleGetNotice(1);\r\n    }\r\n    render(){\r\n    return (\r\n        <section className=\"OldNotice-container\">\r\n            \r\n            <section className=\"OldNotice-mainer\">\r\n                <List\r\n                    locale={{emptyText:'暂无通知'}}\r\n                            itemLayout=\"horizontal\"\r\n                            size=\"large\"\r\n                            pagination={{\r\n                            total:this.state.total,\r\n                            onChange:page => {\r\n                                this.handleGetNotice(page)\r\n                            },\r\n                            pageSize: 5,\r\n                        }}\r\n                    dataSource={this.state.listData}\r\n                    renderItem={(item,index) => (\r\n                        <List.Item\r\n                            key={item._id}\r\n                        >\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src={item.imgPath} />}\r\n                            title={item.title}\r\n                            description={<Space>{item.name}{item.position}<span style={{color:'black'}}>{item.createTime}</span></Space>}\r\n                        />\r\n                         {item.content}  \r\n                        <section className=\"btn-container\">\r\n                            <Space style={{float:'right'}}>\r\n                                <Button disabled={item.status===2} onClick={()=>this.handleTop(index)}>{item.status===2?'已':''}置顶</Button>\r\n                                <Button type=\"primary\" disabled={item.status>0} onClick={()=>this.handleRead(item,index)}>{item.status===0?'未':'已'}读</Button>\r\n                            </Space>\r\n                        </section>\r\n                    </List.Item>\r\n                    )}\r\n                />, \r\n        </section>\r\n        </section>\r\n    )\r\n                }\r\n}\r\n"],"sourceRoot":""}