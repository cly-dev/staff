{"version":3,"sources":["pages/Admin/ChangePassword/changePassword.jsx"],"names":["handleChangePassword","Admin","changePassword","props","handleFinish","value","a","comfirmPsd","code","message","Store","dispatch","adminClear","setTimeout","history","push","className","size","name","onFinish","Item","label","hasFeedback","rules","required","Password","pattern","getFieldValue","validator","_","Promise","reject","Error","resolve","style","marginLeft","dependencies","textAlign","htmlType"],"mappings":"oRAOOA,EAAsBC,IAAtBD,qBACQ,SAASE,EAAeC,GACnC,IAAMC,EAAY,uCAAE,WAAMC,GAAN,SAAAC,EAAA,oEACTD,EAAME,WADG,SAEEP,EAAqBK,GAFvB,OAGA,QAHA,OAGPG,OACNC,YAAQ,0DAAa,WACrBC,IAAMC,SAASC,eACdC,YAAW,WACPV,EAAMW,QAAQC,KAAK,cAPX,2CAAF,sDAWlB,OACI,yBAASC,UAAU,gCAAnB,SACI,eAAC,IAAD,CACIC,KAAK,QACLC,KAAK,eACLC,SAAUf,EAHd,UAKI,cAAC,IAAKgB,KAAN,CACIF,KAAK,SACLG,MAAM,sBACNC,aAAW,EACXC,MAAO,CAAC,CACJC,UAAU,EACVf,QAAS,+CANjB,SAQI,cAAC,IAAMgB,SAAP,MAEJ,cAAC,IAAKL,KAAN,CACIF,KAAK,SACLG,MAAM,qBACNC,aAAW,EACXC,MAAO,CAAC,CACJC,UAAU,EACVf,QAAS,8CACV,CACCiB,QAAS,qBACTjB,QAAS,8JACX,gBAAGkB,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGxB,GACT,OAAKA,GAASsB,EAAc,YAActB,EAC/ByB,QAAQC,OAAO,IAAIC,MAAM,uEAEzBF,QAAQG,cAf/B,SAoBI,cAAC,IAAMR,SAAP,MAEJ,cAAC,IAAKL,KAAN,CACIc,MAAO,CAACC,YAAY,IACpBjB,KAAK,aACLG,MAAM,2BACNe,aAAc,CAAC,UACfd,aAAW,EACXC,MAAO,CAAC,CACJC,UAAU,EACVf,QAAS,gEACV,gBAAGkB,EAAH,EAAGA,cAAH,MAAwB,CACvBC,UADuB,SACbC,EAAGxB,GACT,OAAKA,GAASsB,EAAc,YAActB,EAInCyB,QAAQC,OAAO,IAAIC,MAAM,2DAHrBF,QAAQG,cAZ/B,SAoBI,cAAC,IAAMR,SAAP,MAEJ,cAAC,IAAKL,KAAN,CAAWc,MAAO,CAACG,UAAU,UAA7B,SACI,cAAC,IAAD,CAAQC,SAAS,SAAjB","file":"static/js/29.b90c9969.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Button } from \"antd\";\r\nimport \"./changePassword.scss\";\r\nimport {Admin } from \"../../../axios\";\r\nimport {adminClear} from \"../../../redux/action/admin\";\r\nimport { message } from '../../../api';\r\nimport Store from '../../../redux/store';\r\nconst {handleChangePassword}=Admin;\r\nexport default function changePassword(props) {\r\n    const handleFinish =async value => {\r\n        delete(value.comfirmPsd);\r\n       const result=await handleChangePassword(value);\r\n       if(result.code==='200'){\r\n           message(\"修改成功,请重新登陆\",'success');\r\n           Store.dispatch(adminClear());    \r\n            setTimeout(()=>{\r\n                props.history.push(\"/admin\");\r\n            })\r\n       }\r\n    }\r\n    return (\r\n        <section className=\"adminchangePassword-container\">\r\n            <Form\r\n                size=\"large\"\r\n                name=\"passwordForm\"\r\n                onFinish={handleFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"oldPsd\"\r\n                    label=\"旧密码:\"\r\n                    hasFeedback\r\n                    rules={[{\r\n                        required: true,\r\n                        message: '旧密码不能为空'\r\n                    }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"newPsd\"\r\n                    label=\"新密码\"\r\n                    hasFeedback\r\n                    rules={[{\r\n                        required: true,\r\n                        message: '新密码不能为空'\r\n                    }, {\r\n                        pattern: /^[a-zA-Z]\\w{5,11}$/,\r\n                        message: '以字母开头，长度在6~12之间，只能包含字母、数字和下划线'\r\n                    },({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if ( value && getFieldValue('oldPsd') === value) {\r\n                                return Promise.reject(new Error('新密码不能和旧密码相同'));\r\n                            }\r\n                                return Promise.resolve();\r\n                        },\r\n                    }),\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    style={{marginLeft:-14}}\r\n                    name=\"comfirmPsd\"\r\n                    label=\"确认密码\"\r\n                    dependencies={['newPsd']}\r\n                    hasFeedback\r\n                    rules={[{\r\n                        required: true,\r\n                        message: '确认密码密码不能为空'\r\n                    }, ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('newPsd') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(new Error('两次输入密码不一致'));\r\n                        },\r\n                    }),\r\n                    ]\r\n                    }>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item style={{textAlign:'center'}}>\r\n                    <Button htmlType=\"submit\">提交</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </section>\r\n    )\r\n}\r\n"],"sourceRoot":""}