{"version":3,"sources":["pages/Staff/AddOrder/addOrder.jsx"],"names":["getType","Staff","getList","addOrder","TextArea","Input","AddOrder","state","timer","type","handleRef","a","loading","message","formRef","getFieldValue","name","num","price","mark","createTime","code","destroy","props","history","push","handleTime","time","setState","this","then","res","console","log","data","forEach","value","_id","result","children","list","label","id","className","onFinish","ref","from","labelCol","span","wrapperCol","layout","initialValues","size","Item","rules","required","placeholder","options","onChange","min","rows","showCount","maxLength","onClick","submit","Component"],"mappings":"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","file":"static/js/27.0448466d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Cascader,\r\n  DatePicker,\r\n  InputNumber,\r\n} from 'antd';\r\nimport {Staff} from '../../../axios'; \r\nimport {message} from \"../../../api\";\r\nimport \"./addOrder.scss\";\r\nconst {getType,getList,addOrder}=Staff;\r\nconst { TextArea } = Input;\r\nexport default class AddOrder extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n    state={\r\n        //时间\r\n        timer:'',\r\n        type:[],\r\n\r\n    }\r\n    handleRef=async()=>{\r\n        const loading=message('正在提交中','loading');\r\n        const{name,num,price,type,mark}=this.formRef.getFieldValue()\r\n        const result=await addOrder({name,num,price,type,mark,createTime:this.state.timer});\r\n        if(result.code==='200'){\r\n            loading.destroy();\r\n            message('添加成功','success');\r\n            this.props.history.push('/index/watchOrder');\r\n        }       \r\n    }\r\n    handleTime=(time,timer)=>{\r\n        this.setState({\r\n            timer\r\n        })\r\n    }\r\n  \r\n    componentDidMount(){\r\n        const {type}=this.state;\r\n        getType().then(res=>{\r\n            console.log(res);\r\n            res.data.forEach(async value=>{\r\n                let result=await getList(value._id);\r\n                let children=[];\r\n                result.data.list.forEach(value=>{\r\n                    children.push({\r\n                        value,\r\n                        label:value\r\n                    })\r\n                })\r\n                type.push({\r\n                    value:value.type,\r\n                    label:value.type,\r\n                    id:value._id,\r\n                    children\r\n                })\r\n            })\r\n            this.setState({\r\n                type\r\n            })\r\n        })\r\n    }\r\n    render(){\r\n    return (\r\n            <section className=\"addOrder-container\">\r\n                <section className=\"addOrder-title\">\r\n                    添加流水\r\n                </section>\r\n                <Form\r\n                        onFinish={this.handleRef}\r\n                        ref={from=>this.formRef=from}\r\n                        labelCol={{\r\n                            span: 2,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 13,\r\n                        }}\r\n                        layout=\"horizontal\"\r\n                        initialValues={{\r\n                            size:'large',\r\n                        }}\r\n                        size='large'\r\n                        >\r\n                        <Form.Item label=\"商品名\"  \r\n                        name='name'\r\n                        rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入商品名',\r\n                                },\r\n                ]}>\r\n                    <Input placeholder=\"请输入商品名\"/>\r\n                </Form.Item>\r\n                <Form.Item label=\"类别\"\r\n                        name='type'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入类别',\r\n                            },\r\n                    ]}\r\n                >\r\n                    <Cascader\r\n                        options={this.state.type}\r\n                        placeholder=\"请输入类别\"\r\n                    />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"时间\"  name=\"time\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请选择时间',\r\n                            },\r\n                    ]}>\r\n                        <DatePicker placeholder=\"请输入时间\" onChange={this.handleTime} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"数量\" name=\"num\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入数量',\r\n                            },\r\n                    ]} >\r\n                    <InputNumber min={1} placeholder=\"请输入数量\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"价格\" name=\"price\" rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入价格',\r\n                        },\r\n                    ]}>\r\n                        <InputNumber min={1} placeholder=\"请输入价格\"/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"备注\" name='mark'>\r\n                        <TextArea rows={8} showCount maxLength={100} className=\"textArea-input\"></TextArea>\r\n                    </Form.Item>\r\n                    </Form>\r\n                        <section className=\"refs-container\">\r\n                            <Button  size=\"large\" type=\"primary\"  className=\"refs-btn\" onClick={()=>this.formRef.submit()}>提交</Button>\r\n                        </section>\r\n            </section>\r\n    )\r\n    }\r\n  }"],"sourceRoot":""}