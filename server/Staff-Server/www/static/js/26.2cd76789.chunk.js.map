{"version":3,"sources":["pages/Admin/Performance/performance.jsx"],"names":["getOrderCountByMonth","Admin","getOrderCount","getOrderByEvery","month","newYear","Date","getFullYear","newMonth","getMonth","columns","title","dataIndex","key","align","performance","props","handlegetOrderByMonth","a","dataList","i","push","option","xAxis","data","j","year","Count","k","n","legend","series","name","type","stack","slice","echarts","TitleComponent","ToolboxComponent","TooltipComponent","GridComponent","LegendComponent","LineChart","CanvasRenderer","chartDom","document","querySelector","myChart","setOption","handlegetOrderList","pageNum","listData","state","forEach","value","user","_id","console","log","setState","handlegetCount","Promise","all","lastYear","this","length","className","style","height","fontSize","textAlign","precision","valueStyle","color","prefix","suffix","maxHeight","pagination","pageSize","onChange","page","dataSource","Component"],"mappings":"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","file":"static/js/26.2cd76789.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Statistic,Card,Table} from 'antd';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n    TitleComponent,\r\n    ToolboxComponent,\r\n    TooltipComponent,\r\n    GridComponent,\r\n    LegendComponent\r\n} from 'echarts/components';\r\nimport {\r\n    LineChart\r\n} from 'echarts/charts';\r\nimport {\r\n    CanvasRenderer\r\n} from 'echarts/renderers';\r\nimport \"./performance.scss\";\r\nimport {Admin} from \"../../../axios\";\r\nimport { option } from '../../../api';\r\nconst {getOrderCountByMonth, getOrderCount,getOrderByEvery}=Admin;\r\nlet month=[];\r\nconst newYear =new Date().getFullYear();\r\nconst newMonth = new Date().getMonth()+1;\r\n\r\nconst columns = [\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'username',\r\n      key: 'username',\r\n      align:'center',\r\n \r\n    },\r\n    {\r\n      title: '年龄',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n      align:'center',\r\n    },\r\n    {\r\n      title: '年度总销售额',\r\n      dataIndex: 'orderSum',\r\n      key: 'orderSum',\r\n      align:'center',\r\n    },\r\n  ];\r\n\r\nclass performance extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            series:[],\r\n            lastYear:0,\r\n            newYear:0,\r\n            listData:[]\r\n        }\r\n    }\r\n    //echarts加载图数据\r\n    handlegetOrderByMonth=async()=>{\r\n        let dataList=[];\r\n        for(let i =1;i<=12;i++){\r\n            month.push(i+'月');\r\n        }\r\n        option.xAxis.data=month\r\n        for(let i=2018;i<newYear;i++){\r\n                for(let j=1;j<=12;j++){\r\n                    let data=await getOrderCountByMonth({year:i,month:j});\r\n                    dataList.push(data.data?data.data.Count:0);\r\n                }\r\n        }\r\n        for(let k=1;k<=newMonth;k++){\r\n            let data=await getOrderCountByMonth({year:newYear,month:k});\r\n            dataList.push(data.data?data.data.Count:0)\r\n        }\r\n        let n=0;\r\n        for(let i=2018;i<=newYear;i++){\r\n            option.legend.data.push(''+i);\r\n            option.series.push({\r\n                name:''+i,\r\n                type:'line',\r\n                stack:'总量',\r\n                data:dataList.slice(n * 12, 12*(n+1))\r\n            })\r\n            n++;\r\n        }\r\n        echarts.use(\r\n            [TitleComponent, ToolboxComponent, TooltipComponent, GridComponent, LegendComponent, LineChart, CanvasRenderer]\r\n        );\r\n        const chartDom = document?.querySelector('.echarts-container');\r\n        if(chartDom){\r\n            const myChart = echarts.init(chartDom);\r\n            option && myChart.setOption(option);\r\n        }\r\n        }\r\n\r\n    //按照排名获取每个员工的年度销售额\r\n    handlegetOrderList=async pageNum=>{\r\n        const listData=[...this.state.listData];\r\n        const data=await getOrderByEvery(newYear,pageNum);\r\n        if(data.data){\r\n            data.data.forEach(value=>{\r\n                listData.push({...value.user,...value,key:value._id});\r\n            })\r\n            console.log(listData);\r\n            this.setState({\r\n                listData\r\n            })\r\n            \r\n        }\r\n    }\r\n    //获取年度销售额\r\n    handlegetCount=async ()=>{\r\n        const data=await Promise.all([getOrderCount(newYear),getOrderCount(newYear - 1)]);\r\n        if(data){\r\n            this.setState({\r\n                newYear:data[0].data.Count,\r\n                lastYear:data[1].data.Count,\r\n            })\r\n        }\r\n    }\r\n    //生命周期\r\n    componentDidMount(){\r\n        this.handlegetOrderByMonth();\r\n        this.handlegetCount();\r\n        this.handlegetOrderList(1);\r\n    }\r\n    componentWillUnmount(){\r\n        option.series.length=0;\r\n    }\r\n    render() {\r\n        console.log(\"加载完成\");\r\n        return (\r\n            <section className=\"performance-container\">\r\n                <section className=\"echarts-container\">\r\n\r\n                </section>\r\n                <section className=\"info-container\">\r\n                    <section className=\"data-info\">\r\n                            <section className=\"data-box\">\r\n                                <Statistic style={{height:'300',fontSize:20,textAlign:'center'}} title=\"2021年总销售额\" value={this.state.newYear} />\r\n                                <Statistic style={{height:'300',textAlign:'center'}} title=\"2020年总销售额\" value={this.state.lastYear}  />\r\n                            </section>\r\n                            <section className=\"statistic-box\">\r\n                                    <Card style={{height:'100%'}}>\r\n                                    <Statistic\r\n                                        title=\"同比\"\r\n                                        value={((this.state.newYear -this.state.lastYear)/this.state.newYear) * 100}\r\n                                        precision={2}\r\n                                        valueStyle={{color:this.state.newYear -this.state.lastYear>0?'#cf1322':'#3f8600'}}\r\n                                        prefix={this.state.newYear -this.state.lastYear>0?<ArrowUpOutlined />:<ArrowDownOutlined/>}\r\n                                        suffix=\"%\"\r\n                                    />\r\n                                    </Card>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"user-info\">\r\n                    <Table\r\n                    style={{maxHeight:50}}\r\n                     pagination={{\r\n                         pageSize:6,\r\n                         onChange:page=>{\r\n                             this.handlegetOrderList(page)\r\n                         }\r\n                     }}\r\n                     columns={columns} \r\n                     dataSource={this.state.listData} />   \r\n                    </section>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default performance;\r\n"],"sourceRoot":""}